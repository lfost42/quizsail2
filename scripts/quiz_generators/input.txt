Question #2
A Mule flow has three Set Variable transformers. What global data structure can be used to access the variables?
		A . Mule event attributes
		B . Mule event message
		C . Mule application properties
		D . Mule event
Hide Solution
Correct Answer: D

Question #5
The two Mule configuration files belong to the same Mule project. Each HTTP Listener is configured with the same host string and the port number, path, and operation values are shown in the display names. What is the minimum number of global elements that must be defined to support all these HTTP Listeners? *putShipping - Listener HTTP:800 PUT /shipping *pastOrder - Listener HTTP:6000 POST /order *getShipping - HTTP:8000 GET /shipping *deleteOrder - HTTP:7000 DELETE /order

		A . 1
		B . 2
		C . 3
		D . 4
Hide Solution
Correct Answer: C
Explanation: In this case three configurations will be required each for port 8000, 6000 and 7000. There would be three global elements defined for HTTP connections. Each HTTP connection will have host and port. To use an HTTP listener, you need to declare a configuration with a corresponding connection. This declaration establishes the HTTP server that will listen to requests. Additionally, you can configure a base path that applies to all listeners using the configuration. <http:listener-config name="HTTP_Listener_config" basePath="api/v1"> <http:listener-connection host="0.0.0.0" port="8081" /> </http:listener-config>

Question #7
What is the correct DataWeave expression for the Set Payload transformer to call the createCustomerObject flow with values for the first and last names of a new customer? *createCustomerAPI - Listener HTTP: POST /customer > Set Payload Set to XML response *createCustomerObject - Set Payload Set to customer JSON object
		A . lookupC createCustomerObJect( "Alice", "Green- ) )
		B . createCustomerObject( { first: "Alice", last: "Green" > )
		C . lookupf "createCustomerObject", { first: "Alice", last: "Green" > )
		D . createCustomerObject( "Alice", "Green")
Correct Answer: C
Explanation: lookup(String, Any, Number). This function enables you to execute a flow within a Mule app and retrieve the resulting payload. It works in Mule apps that are running on Mule Runtime version 4.1.4 and later. Similar to the Flow Reference component (recommended), the lookup function enables you to execute another flow within your app and to retrieve the resulting payload. It takes the flow’s name and an input payload as parameters. For example, lookup("anotherFlow", payload) executes a flow named anotherFlow. 

Question #9
What is written to the records.csv file when the flow executes? *Listener HTTP: POST /records > Transform Message Add write_date > Write File: records.csv
* 		A . The JSON payload
* 		B . An error message
* 		C . Nothing
* 		D . The payload convert to CVS

Correct Answer: A
Explanation: Transform Message Add write_date is converting payload in JSON format and same JSON payload is available to file write processor. However, if the payload is a different format (for example, not CSV), you can place the transformation inside the Write operation to generate content that will be written without producing a side effect on the message in transit. This is not done in this case. By default, the connector writes whatever is in the message payload. 

Question #10
What is the correct syntax for a Logger component to output a message with the contents of a JSON Object payload?
		A . The payload is: $(payload)
		B . #["The payload is: " ++ payload]
		C . The payload is: #[payload]
		D . #["The payload is: " + payload]
Hide Solution
Correct Answer: B
Explanation: #["The payload is: " ++ payload] is the only correct answer as it concatenates payload with String. Concatenation function expects both arguments to be string. As the question says payload is json object, this will throw error while running it.

Question #18 
The API needs to be updated using the company-wide standard for the Plan data type. The Object data type has already been published in Anypoint Exchange with the global reference. ACME/DataTypes/PlanDataType.raml. What is a valid RAML specification that reuses the Plan data type?

%RAML 1.0
title: ACME Telecom API
version: 1.0

/plans: 
  get:
  responses:
    200:
      body:
      application/json:
        example: |
          [
            {
              "plan_type": "Super Saver 500",
              "plan _details": "all-inclusive"
              "monthly _discount": 0.10
            },
            {
              "plan_type": "Business Plus 1000"
              "plan details": "business package",
              "monthly _discount": 0.20A
            }
          ]
Option A
#%RAML 1.0
title: ACME Telecom API 
version: 1,0

dataTypes:
  Plan: !include ACME/DataTypes/PlanDataType.raml 
  
/plans:
  get:
    responses: 
      200:
        body:
          application/ json:
            type: Plan[]
            example: !include ACME/Examples/PlanExamples.raml
Option B
#%RAML 1.0
title: ACME Telecom API 
version: 1,0

types:
  Plan: !reference ACME/DataTypes/PlanDataType.raml 
  
/plans:
  get:
    responses: 
      200:
        body:
          application/ json:
            type: Plan[]
            example: !reference ACME/Examples/PlanExamples.raml

Option C
#%RAML 1.0
title: ACME Telecom API 
version: 1,0

dataTypes:
  Plan: !reference ACME/DataTypes/PlanDataType.raml 
  
/plans:
  get:
    responses: 
      200:
        body:
          application/json:
            type: Plan[]
            example: !reference ACME/Examples/PlanExamples.raml

Option D
#%RAML 1.0
title: ACME Telecom API 
version: 1,0

types:
  Plan: !include ACME/DataTypes/PlanDataType.raml 
  
/plans:
  get:
    responses: 
      200:
        body:
          application/json:
            type: Plan[]
            example: !include ACME/Examples/PlanExamples.raml

		A . Option A
		B . Option B
		C . Option C
		D . Option D
Hide Solution
Correct Answer: D

Question #27
What path setting is required for an HTTP Listener endpoint to route all requests to an APIkit router?
A . /(*)
B . /
C . /()
D . “/*”
Hide Solution
Correct Answer: D

Question #28
A web client submits a request to the HTTP Listener and the HTTP Request throws an error. What payload and status code are returned to the web client? <code>\n main: Listener HTTP: GET / > Set Payload "Success - Begin" > Request HTTP: GET /data > Set Payload "Success - End" ... On Error Continue: Set Payload "Error"</code>
A . Response body: "Error" Default response status code: 200
B . Response body: "Success – Begin* Default response status code: 200
C . Error response body: error, description Default error response status code: 500
D . Response body: "Success – End" Default response status code: 200
Correct Answer: A
Explanation: Response body: "Error" Default response status code: 200. -1- Payload is successfully set to “Success C Started Flow” -2- When HTTP Request throws an error, execution halts #[error.description] = “ABC" #[error.errorType] = "XYZ" -3- The On Error Continue scope handles the error. When On Error Continue scope is invoked, all the processors in error block are executed and success response is sent back to the client with payload which is set in error flow. In this case payload is set to "Error" value in error block. -4- “Error” is returned to the requestor in the body of the HTTP request with HTTP Status Code: 200 as On error continue always sends success error code.

Question #29
An app team is developing a mobile banking app. It took them two months to create their own APIs to access transaction information from a central database. The app team later found out that another team had already built an API that accesses the transaction information they need. According to MuleSoft, what organization structure could have saved the app team two months of development time?
A . Center of Excellence
B . Center for Enablement
C . MuleSoft Support Center
D . Central API Review Board
Correct Answer: B
Explanation: Center for Enablement is a cross-functional team typically staffed with members from central IT, line-of-business departments, and digital innovation teams charged with productizing, publishing, and harvesting reusable assets and best practices. In this case, app team would have checked first with Center for Enablement before developing their own API’s. 

Question #30
What payload is returned from a request to http//localhost.8081/?
<code>
<flow name-"main">
    <http:listener doc:nome-"HTTP: GET /" config-ref="HTTP_Listener_config" path="/" />
    <http: request method="POST" doc:name="HTTP: POST /data" url="http://localhost:8081/data"/> 
    <jms: publish-consume doc:name="JMS: num1" config-ref="JMS_Config" destination="num1/>
    <jms: publish doc:name-"JMS: num2" config-ref="JMS_Config" destination="num2"/>
    <set-payload value="#[payload + 1]" doc: nome= "payload + 1" />
</flow>
</code>
A. 1
B. 2
C. 3
D. 4
Correct Answer: C
Explanation: The flow:  1) First HTTP POST request is made in which payload is set to 1 and it gets returned to our mail flow. 2) Second call is initiated for JMS Publish Consume JMS: num1 which adds 1 to the payload and makes it as 2. Note that publish-consume is a synchronous operation. Payload is returned to main flow. 3) Third call is initiated for JMS Publish JMS: num2 which add 1 to the payload. Note that publish is asynchronous operation. Payload is never returned to the main flow. So payload in main flow is still 2 .. 4) Finally Set Payload increments payload by 1 making payload as 3 which is returned by the flow.

Question #31
What is valid text to set the field in the Database connector configuration to the username value specified in the config.yaml file?
A . ${db.username}
B . #[db.username]
C . #[db:username]
D . ${db:username}
Correct Answer: A
Explanation: Correct syntax to access application properties.

Question #32
An API implementation has been deployed to CloudHub and now needs to be governed. IT will not allocate additional vCore for a new Mule application to act as an API proxy. What is the next step to preserve the current vCore usage, but still allow the Mule application to be managed by API Manager?
A . Register the same API implementation in Runtime Manager to connect to API Manager
B . Modify the API implementation to use auto-discovery to register with API Manager
C . Upload the Mule application’s JAR file to the API instance in API Manager
D . Deploy the same API implementation behind a VPC and configure the VPC to connect to API Manager
Correct Answer: B
Explanation: Configuring autodiscovery allows a deployed Mule runtime engine (Mule) application to connect with API Manager to download and manage policies and to generate analytics data. Additionally, with autodiscovery, you can configure your Mule applications to act as their own API proxy. When autodiscovery is correctly configured in your Mule application, you can say that your application’s API is tracked by (green dot) or paired to API Manager. You can associate an API in a Mule setup with only one autodiscovery instance at a given time.

Question #34
A Mule project contains a MySQL Database dependency. The project is exported from Anypoint Studio so it can be deployed to CloudHub. What export options create the smallest deployable archive that will successfully deploy to CloudHub?
A. 'Attach Project Sources' and 'Include Project modules and dependencies'
B. 'Include Project modules and dependencies'
C. 'Attach Project Sources'
D. Neither 'Attach Project Sources' or 'Include Project modules and dependencies'
Correct Answer: B

Question #35
Why would a Mule application use the ${http.port} property placeholder for its HTTP Listener port when it is deployed to CloudHub?
A . Allows CloudHub to automatically change the HTTP port to allow external clients to connect to the HTTP Listener
B . Allows CloudHub to automatically register the application with API Manager
C . Allows MuleSoft Support to troubleshoot the application by connecting directly to the HTTP Listener
D . Allows clients to VPN directly to the application at the Mule application’s configured HTTP port
Correct Answer: A
Explanation: This helps CloudHub to dynamically allocate a port at deployment time.

Question #36
An error occurs when a project is run in Anypoint Studio. The project, which has a dependency that is not in the MuleSoft Maven repository, was created and successfully run on a different computer. What is the next step to fix the error to get the project to run successfully?
A . Edit the dependency in the Mule project’s pom.xml file
B . Install the dependency to the computer’s local Maven repository
C . Deploy the dependency to MuleSoft’s Maven repository
D . Add the dependency to the MULE_HOME/bin folder
Correct Answer: B

Question #37
A web client submits a request to http://localhost:8081?firstName=john. What is the correct DataWeave expression to access the firstName parameter?
A . #[attributes.queryParams.firstName]
B . #[message.queryParams.firstName]
C . #[message.inboundProperties.’http.query.params’.firstName]
D . #[attributes.’http.query.params’.firstName]
Correct Answer: A

Question #39
The Validation component in the Try scope throws an error. What response message is returned to a client request to the main flow’s HTTP Listener?

<flow name= "main"
    <http:listener doc: name="HTTP: POST /" config-ref="HTTP_Listener_config" path="/" />
    <try doc:nome-"Try" >
        <validation:is-null doc:name="payload" value="#[payload] message-"Validation Error"/»
        <error-handler>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate>
            <set-payload value="Error - Try scope" doc:name='"Error - Try scope"'/›
        </on-error-propagate>
        </error-handler >
    </try>
    <set-payload value="Success - main flow" doc:name='"Success - main flow"' />
    </error-handler>
        <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" >
            <set-payload value-"Error - main flow" doc:name-'"Error - main flow"' /›
        </on-error-continue>
    </error-handler>
</flow>

Correct Answer: A
Explanation: Note that private flow has error scope defined as On Error Continue. So when error occurs in private flow, it is handled by this On Error Continue scope which sends success response back to main flow and does not throw back an error. So main continues normally and payload is set to Success – main flow.

Question #40
Which of the following is a valid expression for the Choice router’s when condition to route events when the payload equals 'US'?
A . #[payload = 'US']
B . #[payload == 'US']
C . #[ if(payload = 'US') ]
D . #[ if(payload == "US") ]
Answer: B
Explanation: The Choice router dynamically routes messages through a flow according to a set of DataWeave expressions that evaluate message content. Each expression is associated with a different routing option. The effect is to add conditional processing to a flow, similar to an if/then/else code block in most programming languages. Only one of the routes in the Choice router executes, meaning that the first expression that evaluates to true triggers that route’s execution and the others are not checked. If none of the expressions are true, then the default route executes.

Question #42
The Batch Job processes, filters and aggregates records. What is the expected output from the Logger component?

<flow nome="main" >
    <scheduler doc: name-"Scheduler" > <scheduling-strategy >
    <fixed-frequency frequency="10000"/></scheduling-strategy> </scheduler> 
    <set-payload value="$[(1,2,3,4,5,6)]" doc:name="[1,2,3,4,5,6]" />
    <batch:job jobName="processRecordsBatchJob™ >
        <batch:process-records >
            <batch: step name-"Batch_Step_With_Filter" acceptExpression="#[(payload mod 2) == 0]">
                <ee:transform doc:nome="Multiply by 10'><ee:message >
                        <ee:set-payload><![DOATA[$dw 2.0
                            output application/ java
                            payload * 10]]></ee:set-payload>
                    </ee:message›</ee:transform>
                <batch:aggregator doc:name="Batch_Aggregate_2" size="2">
                    <logger level-"INFO" doc:name="payload" message="#[payload]"/›
                </batch: aggregator>
            </batch: step>
        </batch:process-records>
    </batch:job>
</flow>
A . [10, 20, 30. 40, 50, 60]
B . [10, 20] [30, 40] [50, 60]
C . [20, 40, 60]
D . [20, 40] [60]
Correct Answer: D
Explanation: Batch scope has filter criteria which says payload mod 2 = 0 which means only 2, 4 and 6 will be in batch scope. So payload for each of these will be incremented by 10. Aggregator has batch size defined as 2. So it will process in batch of two records. [20,40] [60]

Question #44
A web client submits a request to http://localhost:8081/fliqhts?destination=SFO and the Web Service Consumer throws a WSC:  BAD_REQUEST error. What is the next step to fix this error?

<code>
Message: Cannot build default body request for operation [findFlight], the operation requires input parameters.
Error type: WSC: BAD_REQUEST 
Element: 10.02.06-soaperrorFlow/processors/0 @ 10.02.06-soaperror:10.02.06-soaperror.xml:21 (Consume)
Element XML: <wsc:consume doc:name="Consume" doc:id="49a84074-2848-4065-b93f-dcbf59fd4412™ config-ref="WebService_Consumer_Config" operation="findFlight"></wsc:consume>
</code>

A . Set a header In the Consume operation equal to the destination query parameter
B . Set a SOAP payload before the Consume operation that contains the destination query parameter
C . Set a property on the Consume operation equal to the destination query parameter
D . Set a JSON payload before the Consume operation that contains the destination query parameter
Correct Answer: B
Explanation: As can be seen in error message, SOAP service findFlights expects the SOAP payload. This can be set using transform message processor which forms a SOAP payload before the Consume operation that contains the destination query parameter. 

Question #47
According to MuleSoft, what is the first step to create a Modern API?
A . Gather a list of requirements to secure the API
B . Create an API specification and get feedback from stakeholders
C . Performance tune and optimize the backend systems and network
D . Create a prototype of the API implementation
Correct Answer: B





